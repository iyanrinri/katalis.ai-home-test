openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
  description: Home Test API for managing books
  contact:
    name: Mohamad Nurdiansyah
    email: mohamad.nurdiansyah25@gmail.com
servers:
  - url: http://localhost:8080
paths:
  /books:
    get:
      summary: Get all books (with pagination)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: perPage
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      perPage:
                        type: integer
                      total:
                        type: integer
                      total_pages:
                        type: integer
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
        '400':
          description: Invalid input
        '409':
          description: ISBN already exists
  /books/{isbn}:
    get:
      summary: Get book by ISBN
      parameters:
        - in: path
          name: isbn
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      summary: Update book by ISBN
      parameters:
        - in: path
          name: isbn
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
        '400':
          description: Invalid input
        '404':
          description: Book not found
    delete:
      summary: Delete book by ISBN
      parameters:
        - in: path
          name: isbn
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted
        '404':
          description: Book not found
components:
  schemas:
    Book:
      type: object
      required:
        - title
        - author
        - isbn
        - release_date
      properties:
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        release_date:
          type: string
          format: date